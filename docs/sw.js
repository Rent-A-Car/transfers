const Static_CACHE_Version="20-01-21",Static_CACHE="static-20-01-21",Static_CACHEAssets=["./","./offline.html","./css/main.css","./css/iconsfont.css","./css/RobotoSlab.css","./css/bootstrap.min.css","./js/main.js","./js/menu.js","./js/authInit.js","https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/js/bootstrap.min.js","./favicon.ico","./icons/android-chrome-192x192.png","./icons/apple-touch-icon-precomposed.png","./icons/GoogleLogo.svg","/css/fonts/iconsfont.woff2","/css/fonts/iconsfont.woff","https://fonts.gstatic.com/s/robotoslab/v12/BngbUXZYTXPIvIBgJJSb6s3BzlRRfKOFbvjojISma2RjRdE.woff2","https://fonts.gstatic.com/s/robotoslab/v12/BngbUXZYTXPIvIBgJJSb6s3BzlRRfKOFbvjojISmb2Rj.woff2","./manifest.webmanifest"],DCACHE="cache-auto",ROUTETable={"transfers.arendacg.space":{"/index.html":"/"},"localhost:8080":{"/index.html":"/"}};async function checkCache(s){if("GET"==s.method){new URL(s.url);return await caches.match(s)}return await fetch(s)}async function checkOnline(s){const t=await caches.open(DCACHE);try{return await fetch(s)}catch(c){console.log(c);const a=await t.match(s);if(a)return a}}self.addEventListener("install",async s=>{const t=await caches.open(Static_CACHE);await t.addAll(Static_CACHEAssets),console.log("Service worker встановлено")}),self.addEventListener("activate",async s=>{const t=(await caches.keys()).map(async s=>{[Static_CACHE].includes(s)||await caches.delete(s)});await Promise.all(t),console.log("Service worker актевовано (видалено застарілий кеш)")}),self.addEventListener("fetch",s=>{s.respondWith(checkCache(s.request))});