const Static_CACHE_Version="21-01-27-2",Static_CACHE="static-21-01-27-2",Static_CACHEAssets=["/","/offline.html","/css/main.css","/css/iconsfont.css","/css/RobotoSlab.css","/css/bootstrap.min.css","/js/main.js","/js/menu.js","https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/js/bootstrap.min.js","/favicon.ico","/icons/android-chrome-192x192.png","/icons/apple-touch-icon-precomposed.png","/icons/GoogleLogo.svg","/css/fonts/iconsfont.woff2","/css/fonts/iconsfont.woff","https://fonts.gstatic.com/s/robotoslab/v12/BngbUXZYTXPIvIBgJJSb6s3BzlRRfKOFbvjojISma2RjRdE.woff2","https://fonts.gstatic.com/s/robotoslab/v12/BngbUXZYTXPIvIBgJJSb6s3BzlRRfKOFbvjojISmb2Rj.woff2","/manifest.webmanifest"],DCACHE="cache-auto",NoCACHEHosts=["apis.google.com","www.googleapis.com","securetoken.googleapis.com"],NoCACHEPaths=["/TermsOfService","/PrivacyPolicy","/cdn-cgi"];async function checkCache(t){if("GET"==t.method){let e=new URL(t.url),s=t;location.hostname==e.hostname&&(e.search="","/index.html"==e.pathname&&(e.pathname="/"),s=new Request(e.toString(),{cache:t.cache,context:t.context,credentials:t.credentials,headers:t.headers,integrity:t.integrity,method:t.method,redirect:t.redirect,referrer:t.referrer,referrerPolicy:t.referrerPolicy,body:t.body,bodyUsed:t.bodyUsed}));const o=await caches.open(Static_CACHE);return await o.match(s||t)||checkOnline(s||t)}return await fetch(t)}async function checkOnline(t){const e=await caches.open(DCACHE);try{let s=new URL(t.url);const o=await fetch(t);if(console.log("fetch to",t.url),!navigator.onLine)throw"Offline";let c=NoCACHEHosts.includes(s.hostname),a=NoCACHEHosts.filter((t,e,o,c=s.pathname)=>c.match(t)).length>0;return c||a?console.log("noCACHED"):await e.put(t,o.clone()),o}catch(s){console.log(s);const o=await e.match(t);if(o)return o;{let e=new URL(t.url).pathname.match(/\.\w+/);return e&&".html"!=e?new Response(new Blob,{status:503,statusText:"You Offline!"}):await caches.match("/offline.html")}}}self.addEventListener("install",async t=>{const e=await caches.open(Static_CACHE);let s=0;for(var o=0;o<5;o++)try{await e.addAll(Static_CACHEAssets);break}catch(t){console.log(t,s),s+=1}if(5==s)for(o=0;o<Static_CACHEAssets.length;o++)try{await e.add(Static_CACHEAssets[o])}catch(t){console.log(t,Static_CACHEAssets[o])}else console.log("Service worker fetch ok");console.log("Service worker встановлено")}),self.addEventListener("activate",async t=>{const e=(await caches.keys()).map(async t=>{[Static_CACHE].includes(t)||await caches.delete(t)});await Promise.all(e),console.log("Service worker актевовано (видалено застарілий кеш)")}),self.addEventListener("fetch",t=>{t.respondWith(checkCache(t.request))});