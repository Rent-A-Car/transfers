const Static_CACHE_Version="21-01-24",Static_CACHE="static-21-01-24",Static_CACHEAssets=["./","./offline.html","./css/main.css","./css/iconsfont.css","./css/RobotoSlab.css","./css/bootstrap.min.css","./js/main.js","./js/menu.js","https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/js/bootstrap.min.js","./favicon.ico","./icons/android-chrome-192x192.png","./icons/apple-touch-icon-precomposed.png","./icons/GoogleLogo.svg","/css/fonts/iconsfont.woff2","/css/fonts/iconsfont.woff","https://fonts.gstatic.com/s/robotoslab/v12/BngbUXZYTXPIvIBgJJSb6s3BzlRRfKOFbvjojISma2RjRdE.woff2","https://fonts.gstatic.com/s/robotoslab/v12/BngbUXZYTXPIvIBgJJSb6s3BzlRRfKOFbvjojISmb2Rj.woff2","./manifest.webmanifest"],DCACHE="cache-auto",NoCACHEHosts=["apis.google.com","www.googleapis.com","securetoken.googleapis.com"],NoCACHEPaths=["/TermsOfService","/PrivacyPolicy"];async function checkCache(t){if("GET"==t.method){let e=new URL(t.url),o=t;location.hostname==e.hostname&&(e.search="",o=new Request(e.toString(),{cache:t.cache,context:t.context,credentials:t.credentials,headers:t.headers,integrity:t.integrity,method:t.method,redirect:t.redirect,referrer:t.referrer,referrerPolicy:t.referrerPolicy,body:t.body,bodyUsed:t.bodyUsed}));const s=await caches.open(Static_CACHE);return await s.match(o||t)||checkOnline(o||t)}return await fetch(t)}async function checkOnline(t){const e=await caches.open(DCACHE);try{let o=new URL(t.url);const s=await fetch(t);if(!s.ok)throw"Resp not ok";return!NoCACHEHosts.includes(o.hostname)&&location.hostname==o.hostname&&NoCACHEPaths.filter((t,e,s,c=o.pathname)=>c.match(t)).length>0?console.log("noCACHED"):await e.put(t,s.clone()),s}catch(o){console.log(o);const s=await e.match(t);if(s)return s;{let e=new URL(t.url).pathname.match(/\.\w+/);if(!e||".html"==e)return await caches.match("/offline.html")}}}self.addEventListener("install",async t=>{const e=await caches.open(Static_CACHE);let o=0;for(var s=0;s<5;s++)try{await e.addAll(Static_CACHEAssets);break}catch(t){console.log(t,o),o+=1}if(5==o)for(s=0;s<Static_CACHEAssets.length;s++)try{await e.add(Static_CACHEAssets[s])}catch(t){console.log(t,Static_CACHEAssets[s])}else console.log("Service worker fetch ok");console.log("Service worker встановлено")}),self.addEventListener("activate",async t=>{const e=(await caches.keys()).map(async t=>{[Static_CACHE].includes(t)||await caches.delete(t)});await Promise.all(e),console.log("Service worker актевовано (видалено застарілий кеш)")}),self.addEventListener("fetch",t=>{t.respondWith(checkCache(t.request))});